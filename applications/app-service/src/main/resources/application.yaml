server:
  port: 8082
  address: 0.0.0.0

api:
  auth:
    key: ${API_AUTH_KEY}

spring:
  application:
    name: "JavaReactivo"

  r2dbc:
    url: ${SPRING_R2DBC_URL}
    username: ${SPRING_R2DBC_USERNAME}
    password: ${SPRING_R2DBC_PASSWORD}
    properties:
      sslMode: require

  sql:
    init:
      platform: postgres

  devtools:
    add-properties: false

  h2:
    console:
      enabled: true
      path: /h2

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  endpoint:
    health:
      probes:
        enabled: true

cors:
  allowed-origins: "*"

# CONFIGURACIÃ“N FALTANTE - RUTAS
routes:
  paths:
    reports: /api/v1/reportes

adapters:
  restconsumer:
    timeout: 5000
    url: ${REST_CONSUMER_URL}
  r2dbc:
    host: ${R2DBC_HOST}
    port: ${R2DBC_PORT}
    database: ${R2DBC_DATABASE}
    schema: public
    username: ${SPRING_R2DBC_USERNAME}
    password: ${SPRING_R2DBC_PASSWORD}
    options: sslmode=require

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

# ===== Ajuste de AWS / SQS =====
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    region:
      static: ${AWS_REGION:us-east-1}
    sqs:
      queue-url: ${AWS_SQS_QUEUE_URL}

# ===== Logging =====
logging:
  level:
    root: INFO
    co.com.bancolombia.r2dbc: DEBUG
    io.awspring.cloud.sqs: WARN
    org.springframework.r2dbc: WARN
    reactor: INFO
